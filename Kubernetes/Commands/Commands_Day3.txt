#Deployments
#Deployments [ Replicaset [ Pods [ Container] ] ]
kubectl create deployment hello1 --image=nginx
kubectl get deployments
kubectl get pod
# Services can enable the Pod communications
kubectl expose deployment hello1 --type=NodePort --port=80     #creating a service using expose command for a deployment
kubectl get svc
# port range restriction could be there
# port range restriction could be there   - 1-65535, available port range in windwos
ls && uname && katx && hostname
ls & uname & katx & hostname
clear
kubectl create deployment apache1 --image=httpd
kubectl get pods
kubectl get deployments
kubectl get pods
kubectl get services
kubectl get rs
kubectl expose deployment apache1 --type=LoadBalancer --port=80
kubectl get services
# user-system -> request -> load-balancer -> [server1:same code + server2:same code + server3:same code]
clear
#YAML
#YAML is not a markup or scripting language
#data-serialization language - readebility, structured, less complex structure
# in simple words it is aggregator for applicable command/flag/parameters for an object
ls
kubectl create -f pod-demo1.yaml
kubectl get pods
kubectl delete -f pod-demo1.yaml              #delete the associated object and not the actual file
kubectl get pods
kubectl describe pod apache1-6c5f6cf456-q6q6q
clear
kubectl edit pod apache1-6c5f6cf456-q6q6q
kubectl describe pod apache1-6c5f6cf456-q6q6q
clear
# kubectl edit pod apache1-6c5f6cf456-q6q6q   #edit specs of a live pod/running already, changes won't reflect back to the file(if any)
echo start
for i in 1 2 3 4 5; do echo in progress $i...; sleep 1; done
kubectl create -f pod-demo2.yaml
kubectl get pods
kubectl logs test-app
kubectl create -f pod-demo2.yaml
kubectl create -f pod-demo2.yaml    #can not run this second time, object already exists error
clear
kubectl apply -f pod-demo1.yaml    #can run this command multiple times, no error
